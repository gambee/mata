static struct{char member[32];}bash_2__TO__start={{
 0x00, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}bash_1__TO__bash_2={{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}bar__TO__start={{
 0x00, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}bar_bash_2__TO__bash_1={{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}bar_bash_2__TO__bar={{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}bar_bash_1__TO__bar_bash_2={{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}foo_3__TO__start={{
 0x00, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}foo_2__TO__foo_3={{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}foo_1__TO__foo_2={{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}start__TO__start={{
 0x00, 0x06, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}start__TO__bar_bash_1={{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

static struct{char member[32];}start__TO__foo_1={{
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}};

enum{STATE_NUMBER_start, STATE_NUMBER_bar_bash_1, STATE_NUMBER_bar_bash_2, STATE_NUMBER_foo_1, STATE_NUMBER_foo_2, STATE_NUMBER_foo_3, STATE_NUMBER_fail, STATE_NUMBER_bash_1, STATE_NUMBER_bash_2, STATE_NUMBER_bar, UNKNOWN_STATE=-1};

int STATE_isfinal(int STATE)
{
	switch(STATE){
		case STATE_NUMBER_start:
		case STATE_NUMBER_foo_3:
		case STATE_NUMBER_bar:
		case STATE_NUMBER_bash_2:
			return 0;
		default:
			return STATE;
	}
}

const int INITIAL_FSM_STATE = STATE_NUMBER_start;

#define STATE_init(X)	(X=INITIAL_FSM_STATE)

char STATE_TEXT_start [] = "start";
char STATE_TEXT_bar_bash_1 [] = "bar_bash_1";
char STATE_TEXT_bar_bash_2 [] = "bar_bash_2";
char STATE_TEXT_foo_1 [] = "foo_1";
char STATE_TEXT_foo_2 [] = "foo_2";
char STATE_TEXT_foo_3 [] = "foo_3";
char STATE_TEXT_fail [] = "fail";
char STATE_TEXT_bash_1 [] = "bash_1";
char STATE_TEXT_bash_2 [] = "bash_2";
char STATE_TEXT_bar [] = "bar";
char STATE_TEXT_UNKNOWN [] = "UKNOWN";

char* STATE_text(int STATE)
{
	switch(STATE)
	{
		case STATE_NUMBER_start:
			return STATE_TEXT_start;
		case STATE_NUMBER_bar_bash_1:
			return STATE_TEXT_bar_bash_1;
		case STATE_NUMBER_bar_bash_2:
			return STATE_TEXT_bar_bash_2;
		case STATE_NUMBER_foo_1:
			return STATE_TEXT_foo_1;
		case STATE_NUMBER_foo_2:
			return STATE_TEXT_foo_2;
		case STATE_NUMBER_foo_3:
			return STATE_TEXT_foo_3;
		case STATE_NUMBER_fail:
			return STATE_TEXT_fail;
		case STATE_NUMBER_bash_1:
			return STATE_TEXT_bash_1;
		case STATE_NUMBER_bash_2:
			return STATE_TEXT_bash_2;
		case STATE_NUMBER_bar:
			return STATE_TEXT_bar;
		default:
			return STATE_TEXT_UNKNOWN;
	}
}

int FSM(int STATE, char input)
{
	switch(STATE){
		case STATE_NUMBER_start:
			goto STATE_LABEL_start;
		case STATE_NUMBER_bar_bash_1:
			goto STATE_LABEL_bar_bash_1;
		case STATE_NUMBER_bar_bash_2:
			goto STATE_LABEL_bar_bash_2;
		case STATE_NUMBER_foo_1:
			goto STATE_LABEL_foo_1;
		case STATE_NUMBER_foo_2:
			goto STATE_LABEL_foo_2;
		case STATE_NUMBER_foo_3:
			goto STATE_LABEL_foo_3;
		case STATE_NUMBER_fail:
			goto STATE_LABEL_fail;
		case STATE_NUMBER_bash_1:
			goto STATE_LABEL_bash_1;
		case STATE_NUMBER_bash_2:
			goto STATE_LABEL_bash_2;
		case STATE_NUMBER_bar:
			goto STATE_LABEL_bar;
		default: return -1; //bad state
	}

	STATE_LABEL_start:
		if(cc_bit((charclass*)&start__TO__foo_1, input))
			return STATE_NUMBER_foo_1;
		if(cc_bit((charclass*)&start__TO__bar_bash_1, input))
			return STATE_NUMBER_bar_bash_1;
		if(cc_bit((charclass*)&start__TO__start, input))
			return STATE_NUMBER_start;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_foo_1:
		if(cc_bit((charclass*)&foo_1__TO__foo_2, input))
			return STATE_NUMBER_foo_2;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_foo_2:
		if(cc_bit((charclass*)&foo_2__TO__foo_3, input))
			return STATE_NUMBER_foo_3;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_foo_3:
		if(cc_bit((charclass*)&foo_3__TO__start, input))
			return STATE_NUMBER_start;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_bar_bash_1:
		if(cc_bit((charclass*)&bar_bash_1__TO__bar_bash_2, input))
			return STATE_NUMBER_bar_bash_2;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_bar_bash_2:
		if(cc_bit((charclass*)&bar_bash_2__TO__bar, input))
			return STATE_NUMBER_bar;
		if(cc_bit((charclass*)&bar_bash_2__TO__bash_1, input))
			return STATE_NUMBER_bash_1;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_bar:
		if(cc_bit((charclass*)&bar__TO__start, input))
			return STATE_NUMBER_start;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_bash_1:
		if(cc_bit((charclass*)&bash_1__TO__bash_2, input))
			return STATE_NUMBER_bash_2;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_bash_2:
		if(cc_bit((charclass*)&bash_2__TO__start, input))
			return STATE_NUMBER_start;
		//Default Transition:
			return STATE_NUMBER_fail;
	STATE_LABEL_fail:
		//Default Transition:
			return STATE_NUMBER_fail;
}

int FSM_finite_control(char* input)
{
	char *cur;
	int state;
	if(!input)
		return -1;

	for(cur=input, STATE_init(state);*cur;++cur)
	{
		state = FSM(state,*cur);
	}
	return STATE_isfinal(state);
}

